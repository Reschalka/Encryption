def caesar_cipher(text, shift, mode='encrypt'):
    """–®–∏—Ñ—Ä—É–µ—Ç –∏–ª–∏ –¥–µ—à–∏—Ñ—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç."""
    result = []
    for char in text:
        if char.isalpha():  # –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –±—É–∫–≤–∞–º–∏
            is_upper = char.isupper()
            char_code = ord(char.lower())
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–¥–≤–∏–≥
            if mode == 'encrypt':
                new_code = (char_code - ord('a') + shift) % 26 + ord('a')
            elif mode == 'decrypt':
                new_code = (char_code - ord('a') - shift) % 26 + ord('a')
            
            new_char = chr(new_code)
            result.append(new_char.upper() if is_upper else new_char)
        else:
            result.append(char)  # –ù–µ –±—É–∫–≤—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
    return ''.join(result)

def main():
    print("üîê –®–∏—Ñ—Ä–∞—Ç–æ—Ä/–î–µ—à–∏—Ñ—Ä–∞—Ç–æ—Ä –¶–µ–∑–∞—Ä—è")
    while True:
        print("\n1. –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å\n2. –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å\n3. –í—ã–π—Ç–∏")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ")
        
        if choice == '1':
            text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç: ")
            shift = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á (—á–∏—Å–ª–æ): "))
            encrypted = caesar_cipher(text, shift, mode='encrypt')
            print("üîí –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:", encrypted)
        
        elif choice == '2':
            text = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: ")
            shift = int(input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á (—á–∏—Å–ª–æ): "))
            decrypted = caesar_cipher(text, shift, mode='decrypt')
            print("üîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:", decrypted)
        
        elif choice == '3':
            print("–î–æ —Å–≤–∏–¥–∞–Ω–∏—è.")
            break
        
        else:
            print("–û—à–∏–±–∫–∞: –≤—ã–±–µ—Ä–∏—Ç–µ 1, 2 –∏–ª–∏ 3.")

if __name__ == "__main__":
    main()
